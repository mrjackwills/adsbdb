CREATE DATABASE adsbdb;

GRANT ALL PRIVILEGES ON DATABASE adsbdb TO adsbdb;

\ c adsbdb CREATE TABLE IF NOT EXISTS error_log (
	error_log_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
	http_code SMALLINT,
	level TEXT NOT NULL CHECK (
		level IN ('warn', 'error', 'verbose', 'info', 'debug')
	),
	message TEXT,
	stack TEXT,
	uuid TEXT
);

GRANT ALL ON error_log TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE error_log_error_log_id_seq TO adsbdb;

-- ********* --
-- COUNTRIES --
-- ********* --
CREATE TABLE IF NOT EXISTS country (
	country_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	country_name TEXT NOT NULL UNIQUE,
	country_iso_name TEXT NOT NULL UNIQUE CHECK (country_iso_name ~ '^[A-Z]{2,3}$')
);

GRANT ALL ON country TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE country_country_id_seq TO adsbdb;

CREATE INDEX country_name_index ON country(country_name);

CREATE INDEX country_iso_name_index ON country(country_iso_name);

-- COPY country(country_name, country_iso_name) FROM '/init/country.csv' DELIMITER ',' CSV HEADER;
-- ******** --
-- AIRLINE
-- ******** --
CREATE TABLE IF NOT EXISTS airline (
	airline_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	airline_name TEXT NOT NULL,
	airline_callsign TEXT,
	country_id BIGINT REFERENCES country(country_id) NOT NULL,
	iata_prefix TEXT CHECK (iata_prefix ~ '^[A-Z0-9]{2}$'),
	icao_prefix TEXT NOT NULL UNIQUE CHECK (icao_prefix ~ '^[A-Z]{3}$')
);

GRANT ALL ON airline TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airline_airline_id_seq TO adsbdb;

CREATE INDEX airline_iata_index ON airline(iata_prefix);

CREATE INDEX airline_name_index ON airline(airline_name);

CREATE INDEX airline_icao_index ON airline(icao_prefix);

-- ******** --
-- AIRCRAFT
-- ******** --
CREATE TABLE IF NOT EXISTS aircraft_icao_type (
	aircraft_icao_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	icao_type TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_icao_type TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_icao_type_aircraft_icao_type_id_seq TO adsbdb;

CREATE INDEX icao_type_index ON aircraft_icao_type(icao_type);

CREATE TABLE IF NOT EXISTS aircraft_manufacturer (
	aircraft_manufacturer_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	manufacturer TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_manufacturer TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_manufacturer_aircraft_manufacturer_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_mode_s (
	aircraft_mode_s_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	mode_s TEXT NOT NULL UNIQUE CHECK (mode_s ~ '^[A-F0-9]{6}$')
);

GRANT ALL ON aircraft_mode_s TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_mode_s_aircraft_mode_s_id_seq TO adsbdb;

CREATE INDEX aircraft_mode_s_index ON aircraft_mode_s(mode_s);

CREATE TABLE IF NOT EXISTS aircraft_operator_flag_code (
	aircraft_operator_flag_code_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	operator_flag_code TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_operator_flag_code TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_operator_flag_code_aircraft_operator_flag_code_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_photo (
	aircraft_photo_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	url_photo TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_photo TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_photo_aircraft_photo_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_registered_owner (
	aircraft_registered_owner_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	registered_owner TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_registered_owner TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_registered_owner_aircraft_registered_owner_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_registration (
	aircraft_registration_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	registration TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_registration TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_registration_aircraft_registration_id_seq TO adsbdb;

CREATE INDEX aircraft_registration_index ON aircraft_registration(registration);

CREATE TABLE IF NOT EXISTS aircraft_registration_country_prefix (
	aircraft_registration_country_prefix_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	registration_country_prefix TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_registration_country_prefix TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_registration_country_aircraft_registration_country_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_serial_number (
	aircraft_serial_number_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	serial_number TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_serial_number TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_serial_number_aircraft_serial_number_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS aircraft_type (
	aircraft_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	type TEXT UNIQUE NOT NULL
);

GRANT ALL ON aircraft_type TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_type_aircraft_type_id_seq TO adsbdb;

CREATE INDEX aircraft_type_index ON aircraft_type(type);

-- SOME of these should be NOT NULL
CREATE TABLE IF NOT EXISTS aircraft (
	aircraft_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	aircraft_icao_type_id BIGINT REFERENCES aircraft_icao_type(aircraft_icao_type_id),
	aircraft_manufacturer_id BIGINT REFERENCES aircraft_manufacturer(aircraft_manufacturer_id),
	aircraft_mode_s_id BIGINT REFERENCES aircraft_mode_s(aircraft_mode_s_id) NOT NULL,
	aircraft_operator_flag_code_id BIGINT REFERENCES aircraft_operator_flag_code(aircraft_operator_flag_code_id),
	aircraft_photo_id BIGINT REFERENCES aircraft_photo(aircraft_photo_id),
	aircraft_registered_owner_id BIGINT REFERENCES aircraft_registered_owner(aircraft_registered_owner_id),
	aircraft_registration_country_prefix_id BIGINT REFERENCES aircraft_registration_country_prefix(aircraft_registration_country_prefix_id),
	aircraft_registration_id BIGINT REFERENCES aircraft_registration(aircraft_registration_id) NOT NULL,
	aircraft_serial_number_id BIGINT REFERENCES aircraft_serial_number(aircraft_serial_number_id),
	aircraft_type_id BIGINT REFERENCES aircraft_type(aircraft_type_id),
	country_id BIGINT REFERENCES country(country_id) NOT NULL
);

GRANT ALL ON aircraft TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE aircraft_aircraft_id_seq TO adsbdb;

-- CREATE TABLE IF NOT EXISTS temp_aircraft_data (
-- 	temp_aircraft_data_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- 	AircraftID TEXT,
-- 	FirstCreated TEXT,
-- 	LastModified TEXT,
-- 	ModeS TEXT,
-- 	ModeSCountry TEXT,
-- 	Country TEXT,
-- 	Registration TEXT,
-- 	CurrentRegDate TEXT,
-- 	PreviousID TEXT,
-- 	FirstRegDate TEXT,
-- 	Status TEXT,
-- 	DeRegDate TEXT,
-- 	Manufacturer TEXT,
-- 	ICAOTypeCode TEXT,
-- 	Type TEXT,
-- 	SerialNo TEXT,
-- 	PopularName TEXT,
-- 	GenericName TEXT,
-- 	AircraftClass TEXT,
-- 	Engines TEXT,
-- 	OwnershipStatus TEXT,
-- 	RegisteredOwners TEXT,
-- 	MTOW TEXT,
-- 	TotalHours TEXT,
-- 	YearBuilt TEXT,
-- 	CofACategory TEXT,
-- 	CofAExpiry TEXT,
-- 	UserNotes TEXT,
-- 	Interested TEXT,
-- 	UserTag TEXT,
-- 	InfoURL TEXT,
-- 	PictureURL1 TEXT,
-- 	PictureURL2 TEXT,
-- 	PictureURL3 TEXT,
-- 	UserBool1 TEXT,
-- 	UserBool2 TEXT,
-- 	UserBool3 TEXT,
-- 	UserBool4 TEXT,
-- 	UserBool5 TEXT,
-- 	UserString1 TEXT,
-- 	UserString2 TEXT,
-- 	UserString3 TEXT,
-- 	UserString4 TEXT,
-- 	UserString5 TEXT,
-- 	UserInt1 TEXT,
-- 	UserInt2 TEXT,
-- 	UserInt3 TEXT,
-- 	UserInt4 TEXT,
-- 	UserInt5 TEXT,
-- 	OperatorFlagCode TEXT
-- );
-- COPY temp_aircraft_data(AircraftID,FirstCreated,LastModified,ModeS,ModeSCountry,Country,Registration,CurrentRegDate,PreviousID,FirstRegDate,Status,DeRegDate,Manufacturer,ICAOTypeCode,Type,SerialNo,PopularName,GenericName,AircraftClass,Engines,OwnershipStatus,RegisteredOwners,MTOW,TotalHours,YearBuilt,CofACategory,CofAExpiry,UserNotes,Interested,UserTag,InfoURL,PictureURL1,PictureURL2,PictureURL3,UserBool1,UserBool2,UserBool3,UserBool4,UserBool5,UserString1,UserString2,UserString3,UserString4,UserString5,UserInt1,UserInt2,UserInt3,UserInt4,UserInt5,OperatorFlagCode)
-- FROM '/init/aircraft.csv' DELIMITER ',' CSV HEADER;
-- INSERT INTO aircraft_icao_type(icao_type) SELECT DISTINCT ICAOTypeCode FROM temp_aircraft_data WHERE ICAOTypeCode IS NOT NULL;
-- INSERT INTO aircraft_manufacturer(manufacturer) SELECT DISTINCT Manufacturer FROM temp_aircraft_data WHERE Manufacturer IS NOT NULL;
-- INSERT INTO aircraft_mode_s(mode_s) SELECT DISTINCT ModeS FROM temp_aircraft_data WHERE ModeS IS NOT NULL;
-- INSERT INTO aircraft_operator_flag_code(operator_flag_code) SELECT DISTINCT OperatorFlagCode FROM temp_aircraft_data WHERE OperatorFlagCode IS NOT NULL;
-- INSERT INTO aircraft_registered_owner(registered_owner) SELECT DISTINCT RegisteredOwners FROM temp_aircraft_data WHERE RegisteredOwners IS NOT NULL;
-- INSERT INTO aircraft_registration_country_prefix(registration_country_prefix) SELECT DISTINCT Country FROM temp_aircraft_data WHERE Country IS NOT NULL;
-- INSERT INTO aircraft_registration(registration) SELECT DISTINCT Registration FROM temp_aircraft_data WHERE Registration IS NOT NULL;
-- INSERT INTO aircraft_serial_number(serial_number) SELECT DISTINCT SerialNo FROM temp_aircraft_data WHERE SerialNo IS NOT NULL;
-- INSERT INTO aircraft_type(type) SELECT DISTINCT Type FROM temp_aircraft_data WHERE Type IS NOT NULL;
-- HERE
-- do $$
-- declare
-- 	temp_aircraft_row record;
-- begin
-- 	for temp_aircraft_row IN SELECT * FROM temp_aircraft_data ORDER BY temp_aircraft_data_id loop
-- 	-- raise notice '%', temp_aircraft_row;
-- 	INSERT INTO aircraft(
-- 		aircraft_icao_type_id,
-- 		aircraft_manufacturer_id,
-- 		aircraft_mode_s_id,
-- 		aircraft_operator_flag_code_id,
-- 		aircraft_registered_owner_id,
-- 		aircraft_registration_country_prefix_id,
-- 		aircraft_registration_id,
-- 		aircraft_serial_number_id,
-- 		aircraft_type_id,
-- 		country_id
-- 	)
-- 	VALUES (
-- 		(SELECT aircraft_icao_type_id FROM aircraft_icao_type WHERE icao_type = temp_aircraft_row.ICAOTypeCode),
-- 		(SELECT aircraft_manufacturer_id FROM aircraft_manufacturer WHERE manufacturer = temp_aircraft_row.Manufacturer),
-- 		(SELECT aircraft_mode_s_id FROM aircraft_mode_s WHERE mode_s = temp_aircraft_row.ModeS),
-- 		(SELECT aircraft_operator_flag_code_id FROM aircraft_operator_flag_code WHERE operator_flag_code = temp_aircraft_row.OperatorFlagCode),
-- 		(SELECT aircraft_registered_owner_id FROM aircraft_registered_owner WHERE registered_owner = temp_aircraft_row.RegisteredOwners),
-- 		(SELECT aircraft_registration_country_prefix_id FROM aircraft_registration_country_prefix WHERE registration_country_prefix = temp_aircraft_row.Country),
-- 		(SELECT aircraft_registration_id FROM aircraft_registration WHERE registration = temp_aircraft_row.Registration),
-- 		(SELECT aircraft_serial_number_id FROM aircraft_serial_number WHERE serial_number = temp_aircraft_row.SerialNo),
-- 		(SELECT aircraft_type_id FROM aircraft_type WHERE type = temp_aircraft_row.Type),
-- 		(SELECT country_id FROM country WHERE country_name = temp_aircraft_row.ModeSCountry)
-- 	);
-- 	end loop;
-- end; $$;
-- DROP TABLE temp_aircraft_data;
-- ******* --
-- AIRPORT
-- ******* --
CREATE TABLE IF NOT EXISTS airport_elevation (
	airport_elevation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	elevation INT UNIQUE
);

GRANT ALL ON airport_elevation TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_elevation_airport_elevation_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS airport_iata_code (
	airport_iata_code_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	iata_code TEXT NOT NULL UNIQUE CHECK (iata_code ~ '^[A-Z0-9]{3}$')
);

GRANT ALL ON airport_iata_code TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_iata_code_airport_iata_code_id_seq TO adsbdb;

CREATE INDEX airport_iata_code_index ON airport_iata_code(iata_code);

CREATE TABLE IF NOT EXISTS airport_icao_code (
	airport_icao_code_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	icao_code TEXT NOT NULL UNIQUE CHECK (icao_code ~ '^[A-Z0-9]{3,4}$')
);

GRANT ALL ON airport_icao_code TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_icao_code_airport_icao_code_id_seq TO adsbdb;

CREATE INDEX airport_icao_code_index ON airport_icao_code(icao_code);

CREATE TABLE IF NOT EXISTS airport_longitude (
	airport_longitude_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	longitude DOUBLE PRECISION UNIQUE
);

GRANT ALL ON airport_longitude TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_longitude_airport_longitude_id_seq TO adsbdb;

CREATE INDEX airport_longitude_index ON airport_longitude(longitude);

CREATE TABLE IF NOT EXISTS airport_latitude (
	airport_latitude_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	latitude DOUBLE PRECISION UNIQUE
);

GRANT ALL ON airport_latitude TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_latitude_airport_latitude_id_seq TO adsbdb;

CREATE INDEX airport_latitude_index ON airport_latitude(latitude);

CREATE TABLE IF NOT EXISTS airport_municipality (
	airport_municipality_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	municipality TEXT UNIQUE
);

GRANT ALL ON airport_municipality TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_municipality_airport_municipality_id_seq TO adsbdb;

CREATE INDEX airport_municipality_index ON airport_municipality(municipality);

CREATE TABLE IF NOT EXISTS airport_name (
	airport_name_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	name TEXT UNIQUE
);

GRANT ALL ON airport_name TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_name_airport_name_id_seq TO adsbdb;

CREATE INDEX airport_name_index ON airport_name(name);

CREATE TABLE IF NOT EXISTS airport_type (
	airport_type_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	type TEXT UNIQUE
);

GRANT ALL ON airport_type TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_type_airport_type_id_seq TO adsbdb;

CREATE INDEX airport_type_index ON airport_type(type);

CREATE TABLE IF NOT EXISTS airport (
	airport_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	airport_elevation_id BIGINT REFERENCES airport_elevation(airport_elevation_id),
	-- TODO FIX ME
	airport_iata_code_id UNIQUE BIGINT REFERENCES airport_iata_code(airport_iata_code_id),
	airport_icao_code_id UNIQUE BIGINT REFERENCES airport_icao_code(airport_icao_code_id),
	airport_latitude_id BIGINT REFERENCES airport_latitude(airport_latitude_id),
	airport_longitude_id BIGINT REFERENCES airport_longitude(airport_longitude_id),
	airport_municipality_id BIGINT REFERENCES airport_municipality(airport_municipality_id),
	airport_name_id BIGINT REFERENCES airport_name(airport_name_id) NOT NULL,
	airport_type_id BIGINT REFERENCES airport_type(airport_type_id) NOT NULL,
	country_id BIGINT REFERENCES country(country_id) NOT NULL -- UNIQUE (airport_type_id, airport_icao_code_id)
);

GRANT ALL ON airport TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE airport_airport_id_seq TO adsbdb;

-- then search for flightroutes that use them!
SELECT
	airport_icao_code_id,
	COUNT(*) as count
FROM
	airport
WHERE
	airport_icao_code_id IS NOT NULL
GROUP BY
	airport_icao_code_id
HAVING
	COUNT(*) > 1;

-- CREATE TABLE IF NOT EXISTS temp_airport_data (
-- 	temp_airport_data_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- 	id TEXT,
-- 	ident TEXT,
-- 	type TEXT,
-- 	name TEXT,
-- 	latitude_deg DOUBLE PRECISION,
-- 	longitude_deg DOUBLE PRECISION,
-- 	elevation_ft DOUBLE PRECISION,
-- 	continent TEXT,
-- 	iso_country TEXT,
-- 	iso_region TEXT,
-- 	municipality TEXT,
-- 	scheduled_service TEXT,
-- 	gps_code TEXT,
-- 	iata_code TEXT,
-- 	local_code TEXT,
-- 	home_link TEXT,
-- 	wikipedia_link TEXT,
-- 	keywords TEXT
-- );
-- COPY temp_airport_data(
-- 	id,
-- 	ident,
-- 	type,
-- 	name,
-- 	latitude_deg,
-- 	longitude_deg,
-- 	elevation_ft,
-- 	continent,
-- 	iso_country,
-- 	iso_region,
-- 	municipality,
-- 	scheduled_service,
-- 	gps_code,
-- 	iata_code,
-- 	local_code,
-- 	home_link,
-- 	wikipedia_link,
-- 	keywords
-- ) FROM '/init/airport.csv' DELIMITER ',' CSV HEADER;
-- UPDATE temp_airport_data SET iata_code = NULL WHERE iata_code = '0';
-- INSERT INTO airport_elevation(elevation) SELECT DISTINCT elevation_ft::FLOAT FROM temp_airport_data WHERE elevation_ft IS NOT NULL;
-- INSERT INTO airport_iata_code(iata_code) SELECT DISTINCT iata_code FROM temp_airport_data WHERE iata_code IS NOT NULL;
-- INSERT INTO airport_icao_code(icao_code) SELECT DISTINCT gps_code FROM temp_airport_data WHERE gps_code IS NOT NULL;
-- INSERT INTO airport_latitude(latitude) SELECT DISTINCT latitude_deg FROM temp_airport_data WHERE latitude_deg IS NOT NULL;
-- INSERT INTO airport_longitude(longitude) SELECT DISTINCT longitude_deg FROM temp_airport_data WHERE longitude_deg IS NOT NULL;
-- INSERT INTO airport_municipality(municipality) SELECT DISTINCT municipality FROM temp_airport_data WHERE municipality IS NOT NULL;
-- INSERT INTO airport_name(name) SELECT DISTINCT name FROM temp_airport_data WHERE name IS NOT NULL;
-- INSERT INTO airport_type(type) SELECT DISTINCT type FROM temp_airport_data WHERE type IS NOT NULL;
-- do $$
-- declare
-- 	temp_airport_row record;
-- begin
-- 	for temp_airport_row IN SELECT * FROM temp_airport_data ORDER BY temp_airport_data_id loop
-- 	-- raise notice '%', temp_airport_row;
-- 	INSERT INTO airport(
-- 	airport_elevation_id,
-- 	airport_iata_code_id,
-- 	airport_icao_code_id,
-- 	airport_latitude_id,
-- 	airport_longitude_id,
-- 	airport_municipality_id,
-- 	airport_name_id,
-- 	airport_type_id,
-- 	country_id
-- 	)
-- 	VALUES (
-- 		(SELECT airport_elevation_id FROM airport_elevation WHERE elevation = temp_airport_row.elevation_ft::FLOAT),
-- 		(SELECT airport_iata_code_id FROM airport_iata_code WHERE iata_code = temp_airport_row.iata_code LIMIT 1),
-- 		(SELECT airport_icao_code_id FROM airport_icao_code WHERE icao_code = temp_airport_row.gps_code LIMIT 1),
-- 		(SELECT airport_latitude_id FROM airport_latitude WHERE latitude = temp_airport_row.latitude_deg),
-- 		(SELECT airport_longitude_id FROM airport_longitude WHERE longitude = temp_airport_row.longitude_deg),
-- 		(SELECT airport_municipality_id FROM airport_municipality WHERE municipality = temp_airport_row.municipality),
-- 		(SELECT airport_name_id FROM airport_name an WHERE an.name = temp_airport_row.name),
-- 		(SELECT airport_type_id FROM airport_type at WHERE at.type = temp_airport_row.type),
-- 		(SELECT country_id FROM country WHERE country_iso_name = temp_airport_row.iso_country)
-- 	);
-- 	end loop;
-- end; $$;
-- DROP TABLE temp_airport_data;
-- ************* --
-- Flight Routes --
-- ************* --
-- Instead just calculate by airline?
-- rename this table
CREATE TABLE IF NOT EXISTS flightroute_callsign_inner (
	flightroute_callsign_inner_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	callsign TEXT NOT NULL UNIQUE
);

GRANT ALL ON flightroute_callsign_inner TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE flightroute_callsign_inner_flightroute_callsign_inner_id_seq TO adsbdb;

CREATE INDEX flightroute_callsign_inner ON flightroute_callsign_inner(callsign);

CREATE TABLE IF NOT EXISTS flightroute_callsign (
	flightroute_callsign_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
	airline_id BIGINT REFERENCES airline(airline_id),
	iata_prefix_id BIGINT REFERENCES flightroute_callsign_inner(flightroute_callsign_inner_id),
	icao_prefix_id BIGINT REFERENCES flightroute_callsign_inner(flightroute_callsign_inner_id),
	callsign_id BIGINT REFERENCES flightroute_callsign_inner(flightroute_callsign_inner_id)
);

GRANT ALL ON flightroute_callsign TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE flightroute_callsign_flightroute_callsign_id_seq TO adsbdb;

CREATE TABLE IF NOT EXISTS flightroute (
	flightroute_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	airport_origin_id BIGINT REFERENCES airport(airport_id) NOT NULL,
	airport_midpoint_id BIGINT REFERENCES airport(airport_id),
	airport_destination_id BIGINT REFERENCES airport(airport_id) NOT NULL,
	flightroute_callsign_id BIGINT REFERENCES flightroute_callsign(flightroute_callsign_id) NOT NULL
);

GRANT ALL ON flightroute TO adsbdb;

GRANT USAGE,
SELECT
	ON SEQUENCE flightroute_callsign_flightroute_callsign_id_seq TO adsbdb;

-- DROP TABLE table flightroute;
-- DROP TABLE table flightroute_callsign;
-- ALTER TABLE flightroute_callsign_inner_temp RENAME TO flightroute_callsign_inner;
-- ALTER TABLE flightroute_callsign_inner rename column flightroute_callsign_inner_temp_id to flightroute_callsign_inner_id;
-- ALTER TABLE flightroute_callsign_temp RENAME TO flightroute_callsign;
-- ALTER TABLE flightroute_callsign_inner rename column flightroute_callsign_temp_id to flightroute_callsign_id;
-- ALTER TABLE flightroute_temp RENAME TO flightroute;
-- ALTER TABLE flightroute rename flightroute_callsign_temp_id to flightroute_callsign_id;
-- ALTER INDEX flightroute_callsign_inner_temp_pkey RENAME TO flightroute_callsign_inner_pkey;
-- ALTER INDEX flightroute_callsign_inner_temp_callsign_key RENAME TO flightroute_callsign_inner_callsign_key;
-- ALTER INDEX flightroute_temp_pkey RENAME TO flightroute_pkey;
-- ALTER SEQUENCE flightroute_callsign_inner_te_flightroute_callsign_inner_te_seq RENAME TO flightroute_callsign_inner_flightroute_callsign_inner_seq;
-- ALTER SEQUENCE flightroute_callsign_temp_flightroute_callsign_id_seq  RENAME TO flightroute_callsign_flightroute_callsign_id_seq;
-- ALTER SEQUENCE flightroute_callsign_temp_flightroute_callsign_temp_id_seq RENAME TO flightroute_callsign_temp_flightroute_callsign_id_seq;
-- ALTER SEQUENCE flightroute_temp_flightroute_id_seq RENAME TO flightroute_flightroute_id_seq;
ALTER SEQUENCE flightroute_callsign_inner_flightroute_callsign_inner_seq RENAME TO flightroute_callsign_inner_flightroute_callsign_inner_id_seq;

-- ALTER TABLE flightroute RENAME CONSTRAINT flightroute_temp_airport_destination_id_fkey TO flightroute_airport_destination_id_fkey;
-- ALTER TABLE flightroute RENAME CONSTRAINT flightroute_temp_airport_midpoint_id_fkey TO flightroute_airport_midpoint_id_fkey;
-- ALTER TABLE flightroute RENAME CONSTRAINT flightroute_temp_airport_origin_id_fkey TO flightroute_airport_origin_id_fkey;
-- ALTER TABLE flightroute RENAME CONSTRAINT flightroute_temp_flightroute_callsign_temp_id_fkey TO flightroute_callsign_id_fkey;
-- ALTER TABLE flightroute RENAME CONSTRAINT flightroute_flightroute_callsign_temp_id_fkey TO flightroute_flightroute_callsign_id_fkey;
-- ALTER INDEX flightroute_callsign_temp_pkey RENAME TO flightroute_callsign_pkey;
-- ALTER TABLE flightroute_callsign RENAME CONSTRAINT flightroute_callsign_temp_airline_id_fkey TO flightroute_callsign_airline_id_fkey;
-- ALTER TABLE flightroute_callsign RENAME CONSTRAINT flightroute_callsign_temp_callsign_id_fkey TO flightroute_callsign_callsign_id_fkey;
-- ALTER TABLE flightroute_callsign RENAME CONSTRAINT flightroute_callsign_iata_suffix_id_fkey TO flightroute_callsign_iata_prefix_id_fkey;
-- ALTER TABLE flightroute_callsign RENAME CONSTRAINT flightroute_callsign_icao_suffix_id_fkey TO flightroute_callsign_icao_prefix_id_fkey;
-- CREATE TABLE IF NOT EXISTS flightroute_callsign (
-- 	flightroute_callsign_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- 	timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
-- 	callsign TEXT NOT NULL UNIQUE CHECK (callsign ~ '^[A-Z0-9]{4,8}$')
-- );
-- GRANT ALL ON flightroute_callsign TO adsbdb;
-- GRANT USAGE, SELECT ON SEQUENCE flightroute_callsign_flightroute_callsign_id_seq TO adsbdb;
-- CREATE INDEX flightroute_callsign_index ON flightroute_callsign(callsign);
-- CREATE TABLE IF NOT EXISTS flightroute (
-- 	flightroute_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- 	airport_origin_id BIGINT REFERENCES airport(airport_id) NOT NULL,
-- 	airport_midpoint_id BIGINT REFERENCES airport(airport_id),
-- 	airport_destination_id BIGINT REFERENCES airport(airport_id) NOT NULL,
-- 	flightroute_callsign_id BIGINT REFERENCES flightroute_callsign(flightroute_callsign_id) NOT NULL
-- );
-- GRANT ALL ON flightroute TO adsbdb;
-- GRANT USAGE, SELECT ON SEQUENCE flightroute_flightroute_id_seq TO adsbdb;
-- CREATE TABLE IF NOT EXISTS temp_flightroute_callsign_data (
-- 	temp_flightroute_callsign_data_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
-- 	flight TEXT NOT NULL,
-- 	origin TEXT NOT NULL,
-- 	midpoint TEXT,
-- 	destination TEXT NOT NULL
-- );
-- COPY temp_flightroute_callsign_data (
-- 	flight,
-- 	origin,
-- 	midpoint,
-- 	destination
-- ) FROM '/init/flightroute_icao.csv' DELIMITER ',' CSV HEADER;
-- INSERT INTO flightroute_callsign(callsign) SELECT DISTINCT flight FROM temp_flightroute_callsign_data WHERE flight IS NOT NULL;
-- do $$
-- declare
-- 	temp_flightroute_row record;
-- begin
-- 	for temp_flightroute_row IN SELECT * FROM temp_flightroute_callsign_data ORDER BY temp_flightroute_callsign_data_id loop
-- 	-- raise notice '%', temp_flightroute_row;
-- 	INSERT INTO flightroute (
-- 	airport_origin_id,
-- 	airport_midpoint_id,
-- 	airport_destination_id,
-- 	flightroute_callsign_id
-- 	)
-- 	VALUES (
-- 		(SELECT aa.airport_id FROM airport aa JOIN airport_icao_code AS aic ON aa.airport_icao_code_id = aic.airport_icao_code_id WHERE aic.icao_code = temp_flightroute_row.origin LIMIT 1),
-- 		(SELECT aa.airport_id FROM airport aa JOIN airport_icao_code AS aic ON aa.airport_icao_code_id = aic.airport_icao_code_id WHERE temp_flightroute_row.midpoint IS NOT NULL AND aic.icao_code = temp_flightroute_row.midpoint LIMIT 1),
-- 		(SELECT aa.airport_id FROM airport aa JOIN airport_icao_code AS aic ON aa.airport_icao_code_id = aic.airport_icao_code_id WHERE aic.icao_code = temp_flightroute_row.destination LIMIT 1),
-- 		(SELECT flightroute_callsign_id FROM flightroute_callsign WHERE callsign = temp_flightroute_row.flight )
-- 	);
-- 	end loop;
-- end; $$;
-- DROP TABLE temp_flightroute_callsign_data;
\ echo "Insert complete" \ echo "Insert complete"